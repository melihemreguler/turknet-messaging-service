server:
  port: 8080
  error:
    include-stacktrace: never
    include-exception: false
    include-message: never
    include-binding-errors: never

spring:
  application:
    name: turknet-messaging-service
  profiles:
    active: local
  data:
    mongodb:
      database: turknet-messaging-db
  kafka:
    consumer:
      group-id: turknet-messaging-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3

app:
  session:
    expiration-hours: 24
    cleanup-interval-minutes: 60
  elasticsearch:
    index-name: turknet-messaging-logs

springdoc:
  swagger-ui:
    path: /api/swagger-ui.html
  api-docs:
    path: /v3/api-docs

management:
  server:
    port: 8080
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,readiness,liveness
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    readiness:
      enabled: true
    liveness:
      enabled: true
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true

---
spring:
  config:
    activate:
      on-profile: local
  data:
    mongodb:
      uri: mongodb://admin:password@localhost:27017/turknet-messaging-db?authSource=admin
  kafka:
    bootstrap-servers: localhost:29092

app:
  kafka:
    topics:
      user-commands: turknet.transformers.user.commands.0
      user-commands-retry: turknet.transformers.user.commands.retry.0
      message-commands: turknet.transformers.message.commands.0
      message-commands-retry: turknet.transformers.message.commands.retry.0
      session-commands: turknet.transformers.session.commands.0
      session-commands-retry: turknet.transformers.session.commands.retry.0
  elasticsearch:
    url: http://localhost:9200

logging:
  level:
    root: INFO
    com.github.melihemreguler.turknetmessagingservice: DEBUG

springdoc:
  swagger-ui:
    enabled: true
  api-docs:
    enabled: true

---
spring:
  config:
    activate:
      on-profile: docker
  data:
    mongodb:
      uri: mongodb://admin:password@mongodb:27017/turknet-messaging-db?authSource=admin
  kafka:
    bootstrap-servers: kafka:9092

app:
  kafka:
    topics:
      user-commands: turknet.transformers.user.commands.0
      user-commands-retry: turknet.transformers.user.commands.retry.0
      message-commands: turknet.transformers.message.commands.0
      message-commands-retry: turknet.transformers.message.commands.retry.0
      session-commands: turknet.transformers.session.commands.0
      session-commands-retry: turknet.transformers.session.commands.retry.0
  elasticsearch:
    url: http://elasticsearch:9200

logging:
  level:
    root: INFO
    com.github.melihemreguler.turknetmessagingservice: DEBUG

springdoc:
  swagger-ui:
    enabled: true
  api-docs:
    enabled: true

---
spring:
  config:
    activate:
      on-profile: staging
  data:
    mongodb:
      uri: mongodb://admin:password@mongodb:27017/turknet-messaging-db?authSource=admin
  kafka:
    bootstrap-servers: kafka:9092

app:
  kafka:
    topics:
      user-commands: turknet.transformers.user.commands.staging.0
      user-commands-retry: turknet.transformers.user.commands.retry.staging.0
      message-commands: turknet.transformers.message.commands.staging.0
      message-commands-retry: turknet.transformers.message.commands.retry.staging.0
      session-commands: turknet.transformers.session.commands.staging.0
      session-commands-retry: turknet.transformers.session.commands.retry.staging.0
  elasticsearch:
    url: http://elasticsearch:9200

logging:
  level:
    root: INFO
    com.github.melihemreguler.turknetmessagingservice: INFO

springdoc:
  swagger-ui:
    enabled: true
  api-docs:
    enabled: true

---
spring:
  config:
    activate:
      on-profile: prod
  data:
    mongodb:
      uri: mongodb://admin:password@mongodb:27017/turknet-messaging-db?authSource=admin
  kafka:
    bootstrap-servers: prod-kafka-cluster:9092

app:
  kafka:
    topics:
      user-commands: turknet.transformers.user.commands.prod.0
      user-commands-retry: turknet.transformers.user.commands.retry.prod.0
      message-commands: turknet.transformers.message.commands.prod.0
      message-commands-retry: turknet.transformers.message.commands.retry.prod.0
      session-commands: turknet.transformers.session.commands.prod.0
      session-commands-retry: turknet.transformers.session.commands.retry.prod.0
  elasticsearch:
    url: http://elasticsearch:9200

logging:
  level:
    root: WARN
    com.github.melihemreguler.turknetmessagingservice: INFO

springdoc:
  swagger-ui:
    enabled: false
  api-docs:
    enabled: false
