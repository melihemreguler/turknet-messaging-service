spring:
  application:
    name: messaging-writer-service
  
  profiles:
    active: local
  
  data:
    mongodb:
      host: localhost
      port: 27017
      database: turknet-messaging-db
      username: admin
      password: password
      authentication-database: admin
  
  kafka:
    bootstrap-servers: localhost:29092
    consumer:
      group-id: messaging-writer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

app:
  kafka:
    topics:
      message-commands: message_commands_topic
      user-commands: user_commands_topic

server:
  port: 8081

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.github.melihemreguler.messagingwriterservice: DEBUG
    org.springframework.kafka: INFO
    org.apache.kafka: WARN

---
spring:
  config:
    activate:
      on-profile: docker

  data:
    mongodb:
      host: mongodb
      port: 27017
      database: turknet-messaging-db
      username: admin
      password: password
      authentication-database: admin
  
  kafka:
    bootstrap-servers: kafka:9092
